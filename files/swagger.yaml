openapi: "3.0.0"
info:
  version: 1.0.0
  title: Go-Drop-Logistik API

servers:
  - url: http://localhost:8080/api/v1
    description: Go-Drop-Logistik API (Localhost)

components:
  schemas:
    # General Parameter
    General.Tracking:
      $ref: './components-general.yaml#components/schemas/General.Tracking'
    # Helpers
    helpers.JSONResponse:
      $ref: './components-general.yaml#components/schemas/helpers.JSONResponse'
    helpers.JSONResponseSuccess:
      $ref: './components-general.yaml#components/schemas/helpers.JSONResponseSuccess'
    # Admins
    admins.ReqLogin:
      $ref: './components-admins.yaml#components/schemas/admins.ReqLogin'
    admins.ReqRegisterAgent:
      $ref: './components-admins.yaml#components/schemas/admins.ReqRegisterAgent'
    # Users
    users.ReqLogin:
      $ref: './components-users.yaml#components/schemas/users.ReqLogin'
    # Agents
    agents.ReqLogin:
      $ref: './components-agents.yaml#components/schemas/agents.ReqLogin'
    agents.ReqAddPhone:
      $ref: './components-agents.yaml#components/schemas/agents.ReqAddPhone'
    agents.ReqAddTruck:
      $ref: './components-agents.yaml#components/schemas/agents.ReqAddTruck'
    agents.ReqAddDriver:
      $ref: './components-agents.yaml#components/schemas/agents.ReqAddDriver'
    agents.ReqAddResi:
      $ref: './components-agents.yaml#components/schemas/agents.ReqAddResi'
    agents.ReqAddManifest:
      $ref: './components-agents.yaml#components/schemas/agents.ReqAddManifest'
    agents.ReqUpdateManifest:
      $ref: './components-agents.yaml#components/schemas/agents.ReqUpdateManifest'
    agents.ReqTrack:
      $ref: './components-agents.yaml#components/schemas/agents.ReqTrack'
  
  # securitySchemes:
  #   Bearer:
  #     type: http
  #     scheme: bearer
  #     bearerFormat: JWT
    

paths:
  # GENERAL
  /tracking:
    post:
      description: "Get tracking data"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components-general.yaml#/components/schemas/General.Tracking"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components-general.yaml#components/schemas/helpers.JSONResponse"
              examples:
                ResTracking:
                  $ref: "./components-general.yaml#/components/examples/ResTracking"
      summary: "Tracking package"
      tags:
        - General

  # ADMINS
  /admin/login:
    post:
      description: "Login admin"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components-general.yaml#/components/schemas/helpers.JSONResponse"
              examples:
                ResLogin:
                  $ref: "./components-general.yaml#/components/examples/ResLogin"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components-admins.yaml#/components/schemas/admins.ReqLogin"
      summary: "Login admin"
      tags:
        - Admins
  /admin/agent/add:
    post:
      description: "Add agent"
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components-general.yaml#/components/schemas/helpers.JSONResponseSuccess"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components-admins.yaml#/components/schemas/admins.ReqRegisterAgent"
      summary: "Add agent"
      tags:
        - Admins
  /admin/profile:
    get:
      description: "Get admin profile"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components-general.yaml#/components/schemas/helpers.JSONResponse"
              examples:
                ResAdminProfile:
                  $ref: "./components-admins.yaml#/components/examples/ResAdminProfile"
      summary: "Get admin profile"
      tags:
        - Admins
  /admin/agent/{agentId}:
    get:
      description: "Get agent data"
      parameters:
        - name: agentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components-general.yaml#/components/schemas/helpers.JSONResponse"
              examples:
                ResAgentProfile:
                  $ref: "./components-agents.yaml#/components/examples/ResAgentProfile"
      summary: "Get agent data"
      tags:
        - Admins
    put:
      description: "Update agent data"
      parameters:
        - name: agentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components-general.yaml#/components/schemas/helpers.JSONResponseSuccess"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components-admins.yaml#/components/schemas/admins.ReqRegisterAgent"
      summary: "Update agent data"
      tags:
        - Admins
  /admin/agent:
    get:
      description: "Get all agent by fetch"
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: per_page
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components-general.yaml#/components/schemas/helpers.JSONResponse"
              examples:
                ResAgentFetch:
                  type: array
                  $ref: "./components-admins.yaml#/components/examples/ResAgentFetch"
      summary: "Get all agent by fetch"
      tags:
        - Admins
  
  
  # AGENTS
  /agent/login:
    post:
      description: "Login agent"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components-general.yaml#/components/schemas/helpers.JSONResponse"
              examples:
                ResLogin:
                  $ref: "./components-general.yaml#/components/examples/ResLogin"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components-agents.yaml#/components/schemas/agents.ReqLogin"
      summary: "Login agent"
      tags:
        - Agents
  /agent/profile:
    get:
      description: "Get agent profile"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components-general.yaml#/components/schemas/helpers.JSONResponse"
              examples:
                ResAgentProfile:
                  $ref: "./components-agents.yaml#/components/examples/ResAgentProfile"
      summary: "Get agent profile"
      tags:
        - Agents
  /agent/phone/add:
    post:
      description: "Add phone number"
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components-general.yaml#/components/schemas/helpers.JSONResponseSuccess"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components-agents.yaml#/components/schemas/agents.ReqAddPhone"
      summary: "Add phone number"
      tags:
        - Agents
  /agent/phone/{phoneId}:
    delete:
      description: "Delete phone number"
      parameters:
        - name: phoneId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components-general.yaml#/components/schemas/helpers.JSONResponseSuccess"
      summary: "Delete phone number"
      tags:
        - Agents
    put: 
      description: "Update phone number"
      parameters:
        - name: phoneId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components-general.yaml#/components/schemas/helpers.JSONResponseSuccess"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components-agents.yaml#/components/schemas/agents.ReqAddPhone"
      summary: "Update phone number"
      tags:
        - Agents
  /agent/phone:
    get:
      description: "Get all phone number"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components-general.yaml#/components/schemas/helpers.JSONResponse"
              examples:
                ResPhone:
                  type: array
                  $ref: "./components-agents.yaml#/components/examples/ResPhone"
      summary: "Get all phone number"
      tags:
        - Agents
  /agent/truck/add:
    post:
      description: "Add truck"
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components-general.yaml#/components/schemas/helpers.JSONResponseSuccess"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components-agents.yaml#/components/schemas/agents.ReqAddTruck"
      summary: "Add truck"
      tags:
        - Agents Trucks
  /agent/truck/{truckId}:
    delete:
      description: "Delete truck"
      parameters:
        - name: truckId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components-general.yaml#/components/schemas/helpers.JSONResponseSuccess"
      summary: "Delete truck"
      tags:
        - Agents Trucks
    put: 
      description: "Update truck"
      parameters:
        - name: truckId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components-general.yaml#/components/schemas/helpers.JSONResponseSuccess"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components-agents.yaml#/components/schemas/agents.ReqAddTruck"
      summary: "Update truck"
      tags:
        - Agents Trucks
  /agent/truck:
    get:
      description: "Get all truck"
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: per_page
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components-general.yaml#/components/schemas/helpers.JSONResponse"
              examples:
                ResTruck:
                  type: array
                  $ref: "./components-agents.yaml#/components/examples/ResFetchTruck"
      summary: "Get all truck"
      tags:
        - Agents Trucks
  /agent/driver/add:
    post:
      description: "Add driver"
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components-general.yaml#/components/schemas/helpers.JSONResponseSuccess"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components-agents.yaml#/components/schemas/agents.ReqAddDriver"
      summary: "Add driver"
      tags:
        - Agents Drivers
  /agent/driver/{driverId}:
    delete:
      description: "Delete driver"
      parameters:
        - name: driverId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components-general.yaml#/components/schemas/helpers.JSONResponseSuccess"
      summary: "Delete driver"
      tags:
        - Agents Drivers
    put: 
      description: "Update driver"
      parameters:
        - name: driverId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components-general.yaml#/components/schemas/helpers.JSONResponseSuccess"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components-agents.yaml#/components/schemas/agents.ReqAddDriver"
      summary: "Update driver"
      tags:
        - Agents Drivers
    get:
      description: "Get driver by id"
      parameters:
        - name: driverId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components-general.yaml#/components/schemas/helpers.JSONResponse"
              examples:
                ResDriver:
                  type: array
                  $ref: "./components-agents.yaml#/components/examples/ResDriverById"
      summary: "Get all driver"
      tags:
        - Agents Drivers
  /agent/resi/add:
    post:
      description: "Add resi"
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components-general.yaml#/components/schemas/helpers.JSONResponseSuccess"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components-agents.yaml#/components/schemas/agents.ReqAddResi"
      summary: "Add resi"
      tags:
        - Agents Resi
  /agent/resi/{resiId}:
    put: 
      description: "Update resi"
      parameters:
        - name: resiId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components-general.yaml#/components/schemas/helpers.JSONResponseSuccess"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components-agents.yaml#/components/schemas/agents.ReqAddResi"
      summary: "Update resi"
      tags:
        - Agents Resi
    get:
      description: "Get resi by id"
      parameters:
        - name: resiId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components-general.yaml#/components/schemas/helpers.JSONResponse"
              examples:
                ResResi:
                  type: array
                  $ref: "./components-agents.yaml#/components/examples/ResResiById"
      summary: "Get all resi"
      tags:
        - Agents Resi
  /agent/resi/{resiId}/decline:
    delete:
      description: "Delete resi"
      parameters:
        - name: resiId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components-general.yaml#/components/schemas/helpers.JSONResponseSuccess"
      summary: "Delete resi"
      tags:
        - Agents Resi
  /agent/manifest/add:
    post:
      description: "Add manifest"
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components-general.yaml#/components/schemas/helpers.JSONResponseSuccess"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components-agents.yaml#/components/schemas/agents.ReqAddManifest"
      summary: "Add manifest"
      tags:
        - Agents Manifest
  /agent/manifest/{manifestId}:
    put: 
      description: "Update manifest"
      parameters:
        - name: manifestId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components-general.yaml#/components/schemas/helpers.JSONResponseSuccess"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components-agents.yaml#/components/schemas/agents.ReqUpdateManifest"
      summary: "Update manifest"
      tags:
        - Agents Manifest
    get:
      description: "Get manifest by id"
      parameters:
        - name: manifestId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components-general.yaml#/components/schemas/helpers.JSONResponse"
              examples:
                ResManifest:
                  type: array
                  $ref: "./components-agents.yaml#/components/examples/ResManifestById"
      summary: "Get manifest by id"
      tags:
        - Agents Manifest
  /agent/manifest/{manifestId}/decline:
    delete:
      description: "Delete manifest"
      parameters:
        - name: manifestId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components-general.yaml#/components/schemas/helpers.JSONResponseSuccess"
      summary: "Delete manifest"
      tags:
        - Agents Manifest
  /agent/manifest/{manifestId}/finished:
    put:
      description: "Update manifest to finished"
      parameters:
        - name: manifestId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components-general.yaml#/components/schemas/helpers.JSONResponseSuccess"
      summary: "Update manifest to finished"
      tags:
        - Agents Manifest
  /agent/manifest:
    get:
      description: "Get all manifest by fetch"
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: per_page
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components-general.yaml#/components/schemas/helpers.JSONResponse"
              examples:
                ResManifest:
                  type: array
                  $ref: "./components-agents.yaml#/components/examples/ResFetchManifest"
      summary: "Get all manifest by fetch"
      tags:
        - Agents Manifest
  /agent/manifest/{manifestId}/track/add:
    post:
      description: "Add track"
      parameters:
        - name: manifestId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components-general.yaml#/components/schemas/helpers.JSONResponseSuccess"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components-agents.yaml#/components/schemas/agents.ReqTrack"
      summary: "Add track"
      tags:
        - Agents Manifest
  /agent/manifest/{manifestId}/track/{trackId}:
    put:
      description: "Update track"
      parameters:
        - name: manifestId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: trackId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components-general.yaml#/components/schemas/helpers.JSONResponseSuccess"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components-agents.yaml#/components/schemas/agents.ReqTrack"
      summary: "Update track"
      tags:
        - Agents Manifest
    delete:
      description: "Delete track"
      parameters:
        - name: manifestId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: trackId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components-general.yaml#/components/schemas/helpers.JSONResponseSuccess"
      summary: "Delete track"
      tags:
        - Agents Manifest
  # USERS
  /auth/login:
    post:
      description: "Login user"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components-general.yaml#/components/schemas/helpers.JSONResponse"
              examples:
                ResLogin:
                  $ref: "./components-general.yaml#/components/examples/ResLogin"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components-users.yaml#/components/schemas/users.ReqLogin"
      summary: "Login user"
      tags:
        - Users
  /user/profile:
    get:
      description: "Get user profile"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components-general.yaml#/components/schemas/helpers.JSONResponse"
              examples:
                ResUserProfile:
                  $ref: "./components-users.yaml#/components/examples/ResUserProfile"
      summary: "Get user profile"
      tags:
        - Users